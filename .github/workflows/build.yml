name: Docker
on: [push]

jobs:
  build:
    name: Cargo build and test
    runs-on: ubuntu-20.04
    env:
      RUSTFLAGS: -D warnings
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive
          token: ${{ secrets.CI_TOKEN }}

      - name: Verify format
        run: cargo fmt -- --check

      - name: Build
        run: cargo build

      - name: Run tests
        run: cargo test

      - name: Upload host-server-manager
        uses: actions/upload-artifact@master
        with:
          name: host-server-manager
          path: target/debug/host-server-manager

  build-test-backend:
    name: Build test-backend
    runs-on: ubuntu-20.04
    env:
      RUSTFLAGS: -D warnings
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive
          token: ${{ secrets.CI_TOKEN }}

      - name: Verify format
        run: |
          cd tests/test-backend
          cargo fmt -- --check

      - name: Build test backend
        run: |
          cd tests/test-backend
          cargo build --release

      - name: Upload test-backend
        uses: actions/upload-artifact@master
        with:
          name: test-backend
          path: tests/test-backend/target/release/test-backend

  build-echo-dapp:
    name: Build echo dapp
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive
          token: ${{ secrets.CI_TOKEN }}

      - name: Install nightly rust
        run: rustup toolchain install nightly

      - name: Build echo dapp
        run: |
          cd tests/machine-emulator-tools/linux/rollup/http/echo-dapp
          cargo +nightly build --release

      - name: Upload echo-dapp
        uses: actions/upload-artifact@master
        with:
          name: echo-dapp
          path: tests/machine-emulator-tools/linux/rollup/http/echo-dapp/target/release/echo-dapp

  integration:
    name: Integration testing
    needs: [build, build-echo-dapp, build-test-backend]
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive
          token: ${{ secrets.CI_TOKEN }}

      - name: Download manager
        uses: actions/download-artifact@master
        with:
          name: host-server-manager

      - name: Download test-backend
        uses: actions/download-artifact@master
        with:
          name: test-backend

      - name: Download echo-dapp
        uses: actions/download-artifact@master
        with:
          name: echo-dapp

      - name: Fix permissions
        run: |
          chmod 755 $(pwd)/host-server-manager
          chmod 755 $(pwd)/echo-dapp
          chmod 755 $(pwd)/test-backend

      - name: Run tests
        run: |
          export CARTESI_HOST_SERVER_MANAGER_BIN=$(pwd)/host-server-manager
          export CARTESI_DAPP_BACKEND_BIN=$(pwd)/test-backend
          export CARTESI_ECHO_DAPP_BACKEND_BIN=$(pwd)/echo-dapp
          cd tests/integration
          cargo test

  docker:
    name: Build and push docker image
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive
          token: ${{ secrets.CI_TOKEN }}

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Docker meta
        id: docker_meta
        uses: docker/metadata-action@v3
        with:
          images: ${{ secrets.DOCKER_ORGANIZATION }}/host-server-manager
          tags: |
            type=ref,event=branch
            type=semver,pattern={{version}}

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push docker image
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: .
          builder: ${{ steps.buildx.outputs.name }}
          platforms: linux/amd64
          tags: ${{ steps.docker_meta.outputs.tags }}
          push: ${{ startsWith(github.ref, 'refs/tags/v') || (github.ref == 'refs/heads/develop') }}
